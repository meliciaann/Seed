'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Seed")>  _
Partial Public Class CustomersDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCustomer(instance As Customer)
    End Sub
  Partial Private Sub UpdateCustomer(instance As Customer)
    End Sub
  Partial Private Sub DeleteCustomer(instance As Customer)
    End Sub
#End Region
    Public Sub New()
        MyBase.New(Global.SeedGeneral.My.MySettings.Default.SeedConnectionString, mappingSource)
        OnCreated()
    End Sub
    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Customers() As System.Data.Linq.Table(Of Customer)
		Get
			Return Me.GetTable(Of Customer)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Customers")>  _
Partial Public Class Customer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustomerId As Integer
	
	Private _CustomerName As String
	
	Private _CustomerAddressLine1 As String
	
	Private _CustomerAddressLine2 As String
	
	Private _CustomerCity As String
	
	Private _CustomerState As String
	
	Private _CustomerZip As String
	
	Private _QBId As String
	
	Private _CustomerPhone As String
	
	Private _Email As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustomerIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnCustomerIdChanged()
    End Sub
    Partial Private Sub OnCustomerNameChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerNameChanged()
    End Sub
    Partial Private Sub OnCustomerAddressLine1Changing(value As String)
    End Sub
    Partial Private Sub OnCustomerAddressLine1Changed()
    End Sub
    Partial Private Sub OnCustomerAddressLine2Changing(value As String)
    End Sub
    Partial Private Sub OnCustomerAddressLine2Changed()
    End Sub
    Partial Private Sub OnCustomerCityChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerCityChanged()
    End Sub
    Partial Private Sub OnCustomerStateChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerStateChanged()
    End Sub
    Partial Private Sub OnCustomerZipChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerZipChanged()
    End Sub
    Partial Private Sub OnQBIdChanging(value As String)
    End Sub
    Partial Private Sub OnQBIdChanged()
    End Sub
    Partial Private Sub OnCustomerPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerPhoneChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CustomerId() As Integer
		Get
			Return Me._CustomerId
		End Get
		Set
			If ((Me._CustomerId = value)  _
						= false) Then
				Me.OnCustomerIdChanging(value)
				Me.SendPropertyChanging
				Me._CustomerId = value
				Me.SendPropertyChanged("CustomerId")
				Me.OnCustomerIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerName", DbType:="NVarChar(255)")>  _
	Public Property CustomerName() As String
		Get
			Return Me._CustomerName
		End Get
		Set
			If (String.Equals(Me._CustomerName, value) = false) Then
				Me.OnCustomerNameChanging(value)
				Me.SendPropertyChanging
				Me._CustomerName = value
				Me.SendPropertyChanged("CustomerName")
				Me.OnCustomerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAddressLine1", DbType:="NVarChar(255)")>  _
	Public Property CustomerAddressLine1() As String
		Get
			Return Me._CustomerAddressLine1
		End Get
		Set
			If (String.Equals(Me._CustomerAddressLine1, value) = false) Then
				Me.OnCustomerAddressLine1Changing(value)
				Me.SendPropertyChanging
				Me._CustomerAddressLine1 = value
				Me.SendPropertyChanged("CustomerAddressLine1")
				Me.OnCustomerAddressLine1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerAddressLine2", DbType:="NVarChar(255)")>  _
	Public Property CustomerAddressLine2() As String
		Get
			Return Me._CustomerAddressLine2
		End Get
		Set
			If (String.Equals(Me._CustomerAddressLine2, value) = false) Then
				Me.OnCustomerAddressLine2Changing(value)
				Me.SendPropertyChanging
				Me._CustomerAddressLine2 = value
				Me.SendPropertyChanged("CustomerAddressLine2")
				Me.OnCustomerAddressLine2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerCity", DbType:="NVarChar(100)")>  _
	Public Property CustomerCity() As String
		Get
			Return Me._CustomerCity
		End Get
		Set
			If (String.Equals(Me._CustomerCity, value) = false) Then
				Me.OnCustomerCityChanging(value)
				Me.SendPropertyChanging
				Me._CustomerCity = value
				Me.SendPropertyChanged("CustomerCity")
				Me.OnCustomerCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerState", DbType:="NVarChar(10)")>  _
	Public Property CustomerState() As String
		Get
			Return Me._CustomerState
		End Get
		Set
			If (String.Equals(Me._CustomerState, value) = false) Then
				Me.OnCustomerStateChanging(value)
				Me.SendPropertyChanging
				Me._CustomerState = value
				Me.SendPropertyChanged("CustomerState")
				Me.OnCustomerStateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerZip", DbType:="NVarChar(10)")>  _
	Public Property CustomerZip() As String
		Get
			Return Me._CustomerZip
		End Get
		Set
			If (String.Equals(Me._CustomerZip, value) = false) Then
				Me.OnCustomerZipChanging(value)
				Me.SendPropertyChanging
				Me._CustomerZip = value
				Me.SendPropertyChanged("CustomerZip")
				Me.OnCustomerZipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QBId", DbType:="NVarChar(MAX)")>  _
	Public Property QBId() As String
		Get
			Return Me._QBId
		End Get
		Set
			If (String.Equals(Me._QBId, value) = false) Then
				Me.OnQBIdChanging(value)
				Me.SendPropertyChanging
				Me._QBId = value
				Me.SendPropertyChanged("QBId")
				Me.OnQBIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerPhone", DbType:="NVarChar(100)")>  _
	Public Property CustomerPhone() As String
		Get
			Return Me._CustomerPhone
		End Get
		Set
			If (String.Equals(Me._CustomerPhone, value) = false) Then
				Me.OnCustomerPhoneChanging(value)
				Me.SendPropertyChanging
				Me._CustomerPhone = value
				Me.SendPropertyChanged("CustomerPhone")
				Me.OnCustomerPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
